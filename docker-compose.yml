version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: sami_postgres
    environment:
      POSTGRES_DB: sami_db
      POSTGRES_USER: sami_user
      POSTGRES_PASSWORD: sami_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - sami_network

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: sami_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sami_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sami_backend
    environment:
      - DATABASE_URL=postgresql://sami_user:sami_password@postgres:5432/sami_db
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - ./data:/app/data
    networks:
      - sami_network

  # Frontend Web
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sami_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - sami_network

  # Servicio de IA (TensorFlow)
  ai_service:
    build:
      context: ./backend
      dockerfile: Dockerfile.ai
    container_name: sami_ai
    environment:
      - REDIS_URL=redis://redis:6379
      - MODEL_PATH=/app/models
    volumes:
      - ./models:/app/models
      - ./data:/app/data
    depends_on:
      - redis
    networks:
      - sami_network

  # Servicio de Voz
  voice_service:
    build:
      context: ./backend
      dockerfile: Dockerfile.voice
    container_name: sami_voice
    environment:
      - REDIS_URL=redis://redis:6379
      - AUDIO_DEVICE=default
    volumes:
      - ./data/audio:/app/audio
    depends_on:
      - redis
    networks:
      - sami_network

  # Nginx (Proxy Reverso)
  nginx:
    image: nginx:alpine
    container_name: sami_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - sami_network

volumes:
  postgres_data:
  redis_data:

networks:
  sami_network:
    driver: bridge
